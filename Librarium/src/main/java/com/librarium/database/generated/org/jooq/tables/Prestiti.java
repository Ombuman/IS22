/*
 * This file is generated by jOOQ.
 */
package com.librarium.database.generated.org.jooq.tables;


import com.librarium.database.generated.org.jooq.DefaultSchema;
import com.librarium.database.generated.org.jooq.Keys;
import com.librarium.database.generated.org.jooq.tables.records.PrestitiRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row8;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Prestiti extends TableImpl<PrestitiRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>Prestiti</code>
     */
    public static final Prestiti PRESTITI = new Prestiti();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PrestitiRecord> getRecordType() {
        return PrestitiRecord.class;
    }

    /**
     * The column <code>Prestiti.id</code>.
     */
    public final TableField<PrestitiRecord, Integer> ID = createField(DSL.name("id"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>Prestiti.data_prenotazione</code>.
     */
    public final TableField<PrestitiRecord, String> DATA_PRENOTAZIONE = createField(DSL.name("data_prenotazione"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>Prestiti.data_inizio</code>.
     */
    public final TableField<PrestitiRecord, String> DATA_INIZIO = createField(DSL.name("data_inizio"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>Prestiti.data_fine</code>.
     */
    public final TableField<PrestitiRecord, String> DATA_FINE = createField(DSL.name("data_fine"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>Prestiti.stato</code>.
     */
    public final TableField<PrestitiRecord, String> STATO = createField(DSL.name("stato"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>Prestiti.libro</code>.
     */
    public final TableField<PrestitiRecord, Integer> LIBRO = createField(DSL.name("libro"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>Prestiti.utente</code>.
     */
    public final TableField<PrestitiRecord, Integer> UTENTE = createField(DSL.name("utente"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>Prestiti.data_ultimo_sollecito</code>.
     */
    public final TableField<PrestitiRecord, String> DATA_ULTIMO_SOLLECITO = createField(DSL.name("data_ultimo_sollecito"), SQLDataType.CLOB, this, "");

    private Prestiti(Name alias, Table<PrestitiRecord> aliased) {
        this(alias, aliased, null);
    }

    private Prestiti(Name alias, Table<PrestitiRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>Prestiti</code> table reference
     */
    public Prestiti(String alias) {
        this(DSL.name(alias), PRESTITI);
    }

    /**
     * Create an aliased <code>Prestiti</code> table reference
     */
    public Prestiti(Name alias) {
        this(alias, PRESTITI);
    }

    /**
     * Create a <code>Prestiti</code> table reference
     */
    public Prestiti() {
        this(DSL.name("Prestiti"), null);
    }

    public <O extends Record> Prestiti(Table<O> child, ForeignKey<O, PrestitiRecord> key) {
        super(child, key, PRESTITI);
    }

    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    @Override
    public UniqueKey<PrestitiRecord> getPrimaryKey() {
        return Keys.PK_PRESTITI;
    }

    @Override
    public List<UniqueKey<PrestitiRecord>> getKeys() {
        return Arrays.<UniqueKey<PrestitiRecord>>asList(Keys.PK_PRESTITI);
    }

    @Override
    public Prestiti as(String alias) {
        return new Prestiti(DSL.name(alias), this);
    }

    @Override
    public Prestiti as(Name alias) {
        return new Prestiti(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Prestiti rename(String name) {
        return new Prestiti(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Prestiti rename(Name name) {
        return new Prestiti(name, null);
    }

    // -------------------------------------------------------------------------
    // Row8 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row8<Integer, String, String, String, String, Integer, Integer, String> fieldsRow() {
        return (Row8) super.fieldsRow();
    }
}
